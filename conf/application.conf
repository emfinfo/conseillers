# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~
# Play uses HOCON as its configuration file format.  HOCON has a number
# of advantages over other config formats, but there are two things that
# can be used when modifying settings.
#
# You can include other configuration files in this main application.conf file:
#include "extra-config.conf"
#
# You can declare variables and substitute for them:
#mykey = ${some.value}
#
# And if an environment variable exists when there is no other subsitution, then
# HOCON will fall back to substituting environment variable:
#mykey = ${JAVA_HOME}

application.name="Conseillers"
application.version="1.2.0"

play.allowGlobalApplication=true

## Akka
# https://www.playframework.com/documentation/latest/ScalaAkka#Configuration
# https://www.playframework.com/documentation/latest/JavaAkka#Configuration
# ~~~~~
# Play uses Akka internally and exposes Akka Streams and actors in Websockets and
# other streaming HTTP responses.
akka {
    # "akka.log-config-on-start" is extraordinarly useful because it log the complete
    # configuration at INFO level, including defaults and overrides, so it s worth
    # putting at the very top.
    #
    # Put the following in your conf/logback.xml file:
    #
    # <logger name="akka.actor" level="INFO" />
    #
    # And then uncomment this line to debug the configuration.
    #
    #log-config-on-start = true
}

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
# ~~~~~
# The secret key is used to sign Play's session cookie.
# This must be changed for production, but we don't recommend you change it in this file.
play.http.secret.key="v/OZ5owOsDEmNL`CSbD:_8?YNji6SHyDaG:e9vC9cO=r^lqjHvvploYA=u=KA4bq"

## Internationalisation
# https://www.playframework.com/documentation/latest/JavaI18N
# ~~~~~
# Play comes with its own i18n settings, which allow the user's preferred language
# to map through to internal messages, or allow the language to be stored in a cookie.
play.i18n {
    # The application languages
    langs = [ "fr" ]

    # Whether the language cookie should be secure or not
    #langCookieSecure = true

    # Whether the HTTP only attribute of the cookie should be set to true
    #langCookieHttpOnly = true
}

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
jpa.default="prodPU"
db.default.jndiName="DefaultDS"
db.default.driver="com.mysql.jdbc.Driver"

# local DB
db.default.url="mysql://root:emf@localhost:3306/parlement"

# remote DB
db.default.url="mysql://strittjc_student:Emf123_@jcstritt.emf-informatique.ch:3306/strittjc_parlement"
#db.default.url="mysql://b8cd17f9af7aa5:470a8fd7@eu-cdbr-west-01.cleardb.com/heroku_34f61232b718404?reconnect=true"

#db.default.sharedCache.mode="NONE"
#dbplugin=disabled

#db.default.idleMaxAge=10 minutes
#db.default.idleConnectionTestPeriod=15 seconds
#db.default.connectionTimeout=10 second
#db.default.connectionTestStatement="SELECT 1"
#db.default.maxConnectionAge=30 minutes

# Evolutions
# ~~~~~
# You can disable evolutions if needed
evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
#ebean.default="models.*"

# filtres préinstallés depuis play 2.6.x
play.filters.enabled += "play.filters.gzip.GzipFilter"
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.disabled += "play.filters.csrf.CSRFFilter"
play.filters.disabled += "play.filters.headers.SecurityHeadersFilter"
play.filters.disabled += "play.filters.hosts.AllowedHostsFilter"

#play.filters.gzip {
    #
    #    contentType {
        #
        #        # If non empty, then a response will only be compressed if its content type is in this list.
        #        whiteList = [ "text/*", "application/javascript", "application/json" ]
        #
        #        # The black list is only used if the white list is empty.
        #        # Compress all responses except the ones whose content type is in this list.
        #        blackList = []
    #    }
#}

play.filters.cors {
    allowedHttpMethods = ["GET", "POST", "PUT", "DELETE"]
    allowedHttpHeaders = ["Accept"]
    preflightMaxAge = 3 days
}
#pathPrefixes = ["/some/path", ...]
#allowedOrigins = ["http://localhost", "http://192.168"]

#filtres privés
#play.http.filters="filters.Filters"